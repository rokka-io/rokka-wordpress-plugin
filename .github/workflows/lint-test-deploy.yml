name: Lint Test Deploy

on: [push]

jobs:
  lint:
    name: Lint

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Install dependencies
        run: |
          npm ci
          composer install

      - name: Run linter
        run: |
          npm run wp-env start
          npm run lint

  tests:
    name: Tests

    runs-on: ubuntu-latest

    strategy:
      matrix:
        wp-versions: [
            '4.7', # Introduction of REST API
            '4.9.20', # Last 4.x version
            '5.0', # Introduction of Gutenberg
            '5.3', # Changes in generating srcset
            '5.9.3' # Latest
        ]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Install dependencies
        run: |
          npm ci
          composer install
      - name: "Install WP specific wp-phpunit version (${{ matrix.wp-versions }})"
        run: composer require --dev wp-phpunit/wp-phpunit:${{ matrix.wp-versions }}

      - name: "Configure environment with WP ${{ matrix.wp-versions }}"
        run: |
          echo -e '{\n\t"core": "WordPress/WordPress#${{ matrix.wp-versions }}"\n}' > ./.wp-env.override.json

      - name: Install WordPress
        run: |
          chmod -R 767 ./ # TODO: Possibly integrate in wp-env
          npm run wp-env start --debug

      - name: Running PHP unit tests
        run: npm run test:unit:php:ci

  tests-wp-60:
    name: Tests WordPress 6.0

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: |
          npm ci
          composer install

      - name: "Configure environment with WP 6.0"
        run: |
          echo -e '{\n\t"core": "https://wordpress.org/wordpress-6.0-RC2.zip"\n}' > ./.wp-env.override.json

      - name: Install WordPress
        run: |
          chmod -R 767 ./ # TODO: Possibly integrate in wp-env
          npm run wp-env start

      - name: Running PHP unit tests
        run: npm run test:unit:php:ci

  deploy-dry-run:
    name: '[DRY RUN] Deploy'

    # only run on master but not tags
    if: ${{ github.ref == 'refs/heads/master' && !startsWith(github.ref, 'refs/tags/') }}

    needs: [ lint, tests, 'tests-wp-60' ]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - shell: bash
        env:
          SVN_PASSWORD: ${{ secrets.SVN_PASSWORD }}
        run: |
          DRYRUN=true scripts/deploy-wp-plugin.sh

  deploy:
    name: Deploy

    # only run on tags
    if: startsWith(github.ref, 'refs/tags/')

    needs: [ lint, tests, 'tests-wp-60' ]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - shell: bash
        env:
          SVN_PASSWORD: ${{ secrets.SVN_PASSWORD }}
        run: |
          scripts/deploy-wp-plugin.sh
